import os
import rtconfig
from building import *

Import('SDK_LIB')

cwd = GetCurrentDir()

# add general drivers
src = Split('''
board.c
CubeMX_Config/Src/stm32f3xx_hal_msp.c
''')

path =  [cwd]
path += [cwd + '/CubeMX_Config/Inc']

startup_path_prefix = SDK_LIB

if rtconfig.CROSS_TOOL == 'gcc':
    src += [startup_path_prefix + '/STM32F3xx_HAL/CMSIS/Device/ST/STM32F3xx/Source/Templates/gcc/startup_stm32f302x8.s']
elif rtconfig.CROSS_TOOL == 'keil':
    src += [startup_path_prefix + '/STM32F3xx_HAL/CMSIS/Device/ST/STM32F3xx/Source/Templates/arm/startup_stm32f413xx.s']
elif rtconfig.CROSS_TOOL == 'iar':
    src += [startup_path_prefix + '/STM32F3xx_HAL/CMSIS/Device/ST/STM32F3xx/Source/Templates/iar/startup_stm32f413xx.s']

# STM32F305xx) || STM32F315xx) || STM32F307xx) || STM32F317xx)
# STM32F327xx) || STM32F337xx) || STM32F329xx) || STM32F339xx)
# STM32F301xC) || STM32F301xE) || STM32F310Tx) || STM32F310Cx)
# STM32F310Rx) || STM32F311xE) || STM32F346xx) || STM32F369xx)
# STM32F379xx) || STM32F312Cx) || STM32F312Rx) || STM32F312Vx)
# STM32F312Zx) || STM32F313xx) || STM32F323xx)
# You can select chips from the list above
CPPDEFINES = ['STM32F302x8']
group = DefineGroup('Drivers', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)

Return('group')
